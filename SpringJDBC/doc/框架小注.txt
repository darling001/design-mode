框架做了两件事
1、自动生成SQL语句
2、自动ORM映射

Hibernate优点
1、API丰富，可以实现无SQL操作（HQL），为了兼容所有数据库（都会先解释为HQL），再由HQL翻译成SQL（当然，有支持直接执行SQL的API，为了考虑用户需求复杂性）
对所有数据库方言都支持得非常不错
2、ORM全自动化

MyBatis优点
1、轻量级，性能好
2、SQL和Java代码分离（SqlMap，把每一条SQL语句起一名字，作为Map的key保存）
get("selectByName")

自己的框架（择其善者而从之，开发出一个适合自己的框架）
爱美之心，人皆有之
第一、性能要好，是啥就是啥，不经过二次处理（不对SQL语句进行二次包装）
第二、单表操作实现NoSQL（只要用JDBC，SQL是不能省，只不过拼接SQL的过程不要用自己写，由程序自动生成，最终生成字符串）
QueryRule（顾名思义，查询规则），可以根据QueryRule来自动生成SQL语句
第三、ORM零配置实现自动化（利用反射机制，把字段和属性对应上，然后，自动实例化返回值）

原则：约定优于配置（保证代码健壮性）
DAO原则：一个Dao只操作一张表
约定：做修改和删除的时候，是根据主键来操作的
约定：尽量使用单表操作，如果实在要用多表操作，可以先把数据查出来放到内存，然后在内存中进行计算
约定：支持读写分离
约定：支持分库分表
约定：ORM支持的类型原则上只认Java八大基本数据类型+String（降低复杂度）
时间类型原则上使用时间戳
对象状态：临时态、持久态、删除态、游离态